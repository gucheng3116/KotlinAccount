plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

static def releaseTime() {
    return new Date().format("yyyyMMdd_HHmm", TimeZone.getTimeZone("GMT+8"))
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.gucheng.statistic.helper"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 6
        versionName "1.3.3"

        flavorDimensions "versionCode"

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'arm64-v8a', 'x86_64' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            def propsFile = file('keystore.properties')
            if (propsFile.exists()) {
                def props = new Properties()
                props.load(new FileInputStream(propsFile))
                storeFile file(props['storeFile'])
                storePassword props['storePassword']
                keyAlias props['keyAlias']
                keyPassword props['keyPassword']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    productFlavors {
        tencent {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE:"tencent"]
        }
        huawei {
            manifestPlaceholders = [UMENG_CHANNEL_VALUE:"huawei"]
        }
    }

    applicationVariants.all {
        variant ->
            variant.outputs.all {
                outputFileName ="statishelper_${variant.productFlavors[0].name}_v${defaultConfig.versionName}_${releaseTime()}.apk"
            }
    }

}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Kotlin components
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutines"

    implementation "androidx.activity:activity-ktx:$rootProject.activityVersion"

    //tencent bugly
    implementation 'com.tencent.bugly:crashreport_upgrade:latest.release'
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'

    implementation 'androidx.core:core-ktx:1.2.0'
    def work_version = "2.5.0"
    implementation "androidx.work:work-runtime-ktx:$work_version"
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.biometric:biometric:1.0.0-beta01'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    //图表库
//    implementation 'org.xclcharts:lib:2.4'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    //内存泄漏检测
//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.7'

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // 友盟基础组件库（所有友盟业务SDK都依赖基础组件库）
    implementation "com.umeng.umsdk:common:9.5.2"
    implementation "com.umeng.umsdk:asms:1.2.3" // asms包依赖(必选)

    def room_version = "2.3.0"

    implementation "androidx.room:room-runtime:$room_version"

    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"
    annotationProcessor "androidx.room:room-compiler:2.2.0-rc01"
    // To use Kotlin Symbolic Processing (KSP)
//    ksp "androidx.room:room-compiler:$room_version"

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

//    implementation 'com.yanzhenjie.recyclerview:x:1.3.2'

    implementation project(':x')

    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$rootProject.lifecycleVersion"
}